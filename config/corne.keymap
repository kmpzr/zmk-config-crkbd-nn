#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
/ {
    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp TAB           &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y      &kp U  &kp I          &kp O       &kp P      &kp BACKSPACE
&kp LEFT_CONTROL  &kp A  &kp S  &kp D     &kp F  &kp G        &kp H      &kp J  &kp K          &kp L       &kp SEMI   &kp SINGLE_QUOTE
&kp LEFT_SHIFT    &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N      &kp M  &kp COMMA      &kp PERIOD  &kp SLASH  &kp RIGHT_SHIFT
                                &kp LGUI  &to 1  &kp SPACE    &kp ENTER  &to 2  &kp RIGHT_ALT
            >;
        };

        raise {
            bindings = <
&trans  &kp EXCLAMATION  &kp AT_SIGN  &kp POUND  &kp DOLLAR  &kp PERCENT    &kp CARET       &kp AMPERSAND   &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&trans  &trans           &trans       &trans     &trans      &trans         &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT             &trans                 &trans
&trans  &trans           &trans       &trans     &trans      &trans         &trans          &trans          &kp KP_COMMA  &trans                &trans                 &trans
                                      &trans     &trans      &trans         &trans          &trans          &trans
            >;
        };

        low {
            bindings = <
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5         &kp NUMBER_6    &kp NUMBER_7  &kp NUMBER_8    &kp NUMBER_9       &kp NUMBER_0  &trans
&trans  &trans        &trans        &trans        &trans        &kp K_POWER    &kp KP_MINUS    &kp KP_EQUAL  &kp LBKT        &kp RIGHT_BRACKET  &kp BSLH      &kp GRAVE
&trans  &kp SYSREQ    &trans        &trans        &trans        &kp K_SLEEP    &kp UNDERSCORE  &kp KP_PLUS   &kp LEFT_BRACE  &kp RIGHT_BRACE    &kp PIPE      &kp TILDE
                                    &trans        &trans        &trans         &trans          &trans        &trans
            >;
        };

        both {
            bindings = <
&kp ESC  &kp F1  &kp F2             &kp F3      &kp F4           &kp F5        &kp F6           &kp F7         &kp F8            &kp F9      &kp F10         &kp F11
&trans   &trans  &trans             &trans      &trans           &kp F12       &kp HOME         &kp PAGE_DOWN  &kp PAGE_UP       &kp END     &kp SCROLLLOCK  &kp INS
&trans   &trans  &kp K_VOLUME_DOWN  &kp K_MUTE  &kp K_VOLUME_UP  &kp DELETE    &kp PRINTSCREEN  &kp K_PREV     &kp K_PLAY_PAUSE  &kp K_NEXT  &trans          &trans
                                    &trans      &trans           &trans        &trans           &trans         &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        both {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
